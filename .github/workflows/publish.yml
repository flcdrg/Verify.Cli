name: Publish

on:
  release:
    types: # https://docs.github.com/en/developers/webhooks-and-events/webhook-events-and-payloads#release
      - released
      - prereleased

jobs:
  dump:
    runs-on: ubuntu-latest

    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"

  main:
    runs-on: ubuntu-latest
 
    env:
      DOCKERHUB_USERNAME: flcdrg
      REGISTRY: ghcr.io
      REGISTRY2: docker.io
      IMAGE_NAME: ${{ github.repository }}

    steps:
      - name: Download Assets
        uses: i3h/download-release-asset@v1.3.3
        with:
          owner: ${{ github.event.repository.owner.login }}
          repo: ${{ github.event.repository.name }}
          tag: ${{ github.event.release.tag_name }}
          file: /.+/
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: List directory
        run: ls -lR

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3.3.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # - name: Log into registry ${{ env.REGISTRY2 }}
      #   if: github.event_name != 'pull_request'
      #   uses: docker/login-action@v3.3.0
      #   with:
      #     registry: ${{ env.REGISTRY2 }}
      #     username: ${{ env.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}


      - name: Import and push image
        run: |
          docker load -i container.tar.gz
          docker images
          docker tag ${{ env.IMAGE_NAME }} ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.event.release.tag_name }}
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.event.release.tag_name }}
