name: Publish

on:
  release:
    types: # https://docs.github.com/en/developers/webhooks-and-events/webhook-events-and-payloads#release
      - released
      - prereleased

jobs:
  dump:
    runs-on: ubuntu-latest

    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"

  main:
    runs-on: ubuntu-latest
 
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    env:
      DOCKERHUB_USERNAME: flcdrg
      REGISTRY_GITHUB: ghcr.io
      REGISTRY_DOCKERHUB: docker.io
      IMAGE_NAME: verify-cli

    steps:
      - name: Download Assets
        uses: i3h/download-release-asset@v1.3.3
        with:
          owner: ${{ github.event.repository.owner.login }}
          repo: ${{ github.event.repository.name }}
          tag: ${{ github.event.release.tag_name }}
          file: /.+/
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: List directory
        run: ls -lR

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY_GITHUB }}
        uses: docker/login-action@v3.3.0
        with:
          registry: ${{ env.REGISTRY_GITHUB }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Log into registry ${{ env.REGISTRY_DOCKERHUB }}
        uses: docker/login-action@v3.3.0
        with:
          registry: ${{ env.REGISTRY_DOCKERHUB }}
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: List Docker logins
        run: cat ~/.docker/config.json

      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Import Docker image from tar.gz
        run: |
          docker import container.tar.gz ${{ env.REGISTRY_GITHUB }}/${{ env.IMAGE_NAME }}:latest
          docker tag ${{ env.REGISTRY_GITHUB }}/${{ env.IMAGE_NAME }}:latest ${{ env.IMAGE_NAME }}:latest
          docker tag ${{ env.REGISTRY_GITHUB }}/${{ env.IMAGE_NAME }}:latest index.docker.io/${{ env.IMAGE_NAME }}:latest

      # List docker images
      - name: List Docker images
        run: docker images --digests

      - name: Push Docker image to GitHub
        run: docker push ${{ env.REGISTRY_GITHUB }}/${{ env.IMAGE_NAME }}:latest

      - name: Push Docker image to DockerHub
        run: docker push ${{ env.IMAGE_NAME }}:latest

      - name: Get digest of the image
        id: getdigest
        run: |
          docker inspect ${{ env.REGISTRY_GITHUB }}/${{ env.IMAGE_NAME }}:latest
          echo ""
          digest=$(docker inspect --format='{{index .RepoDigests 0}}' ${{ env.REGISTRY_GITHUB }}/${{ env.IMAGE_NAME }}:latest | grep -o 'sha256:.*')
          echo "digest: $digest"
          echo "digest=$digest" >> $GITHUB_OUTPUT

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY_GITHUB }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.getdigest.outputs.digest }}
          push-to-registry: true

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: index.docker.io/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.getdigest.outputs.digest }}
          push-to-registry: true
